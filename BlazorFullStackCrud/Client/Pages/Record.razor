@*  For create  *@
@page "/record"            
 
@*  For edit    *@
@page "/record/{id:int}"   

@inject IHealthRecordService HealthRecordService
@if (Id == null)
{
    <PageTitle>Create a new Record</PageTitle>
    <h3>Create a new Record</h3>
}
else
{
    <PageTitle>Edit @record.PatientName</PageTitle>
    <h3>Edit @record.PatientName</h3>

}

<EditForm Model="record" OnSubmit="HandleSubmit">
    
    
    <div>
        <label for="patientname">Patient Name</label>
        <InputText id="patientname" @bind-Value="record.PatientName" class="form-control"></InputText>
    </div>

    <div>
        <label for="medicalhistory">Medical History</label>
        <InputText id="medicalhistory" @bind-Value="record.MedicalHistory" class="form-control"></InputText>
    </div>

    <div>
        <label for="medications">Medications</label>
        <InputText id="medications" @bind-Value="record.Medications" class="form-control"></InputText>
    </div>

    <div>
        <label for="allergies">Allergies</label>
        <InputSelect id="allergies" @bind-Value="record.AllergyId" class="form-select">
            @foreach(var allergy in HealthRecordService.Allergies)
            {
                <option value="@allergy.AllergyId">@allergy.AllergyName</option>
            }
        </InputSelect>
    </div>

    <br />
    
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteRecord">Delete Record</button>


</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    HealthRecord record = new HealthRecord
    {
        Allergies = new Allergies()

    };


    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Record" : "Update Record";
        await HealthRecordService.GetAllergies();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            // create a new record
            record.Allergies = HealthRecordService.Allergies[0];
            record.AllergyId = record.Allergies.AllergyId;
        }
        else
        {
            record = await HealthRecordService.GetSingleHealthRecord((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if(Id == null)
        {
            await HealthRecordService.CreateRecord(record);
        }
        else
        {
            await HealthRecordService.UpdateRecord(record);
        }
    }

    async Task DeleteRecord()
    {
        await HealthRecordService.DeleteRecord(record.PatientId);
    }
}
